# This file must be used with "source bin/activate" *from bash*
# you cannot run it directly

# It performs the following actions:
# * adds local bin/ folder to the PATH
# * adds a "deactivate" command to restore the PATH to its previous state

# Highly inspired by Python-virtualenv's bin/activate

# Initialize working directory variable
DISTRIBUTION_BASE_DIR="$(dirname $(readlink -f ${BASH_SOURCE[0]}))"
DISTRIBUTION_BASE_DIR="$(dirname $DISTRIBUTION_BASE_DIR)"

deactivate () {
    # reset old environment variables
    if [ -n "$_OLD_VIRTUAL_PATH" ] ; then
        PATH="$_OLD_VIRTUAL_PATH"
        export PATH
        unset _OLD_VIRTUAL_PATH
    fi
    
    # This should detect bash and zsh, which have a hash command that must
    # be called to get it to forget past commands.  Without forgetting
    # past commands the $PATH changes we made may not be respected
    if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
        hash -r
    fi
    
    # Restore shell prompt
    if [ -n "$_OLD_VIRTUAL_PS1" ] ; then
        PS1="$_OLD_VIRTUAL_PS1"
        export PS1
        unset _OLD_VIRTUAL_PS1
    fi

    unset DISTRIBUTION_BASE_DIR
    if [ ! "$1" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

# Adapt this to your local environment.
#export DRUSH_PHP=/usr/bin/php5
#alias php='bin/php'

_OLD_VIRTUAL_PATH="$PATH"
PATH="$DISTRIBUTION_BASE_DIR/bin:$PATH"
export PATH

# Update shell prompt
if [ -z "$VIRTUAL_ENV_DISABLE_PROMPT" ] ; then
    _OLD_VIRTUAL_PS1="$PS1"
    if [ "`basename \"$DISTRIBUTION_BASE_DIR\"`" = "__" ] ; then
        # special case for Aspen magic directories
        # see http://www.zetadev.com/software/aspen/
        PS1="[`basename \`dirname \"$DISTRIBUTION_BASE_DIR\"\``] $PS1"
    else
        PS1="(`basename \"$DISTRIBUTION_BASE_DIR\"`)$PS1"
    fi
    export PS1
fi

# This should detect bash and zsh, which have a hash command that must
# be called to get it to forget past commands.  Without forgetting
# past commands the $PATH changes we made may not be respected
if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r
fi
